# AUTOGENERATED! DO NOT EDIT! File to edit: 01_data.ipynb (unless otherwise specified).

__all__ = ['defeat_position']

# Cell
from .core import *
from PIL import Image

import pandas as pd

# Cell
def defeat_position(img_id: str, class_id: int, df:pd.DataFrame=train):
    """
    Get coordinates of defects `(x, y)` given an ImageId and a ClassId

    Attributes
    ---------
    img_id: str
        ImageId in df, image name with suffix

    class_id: int
        ClassId in df, type of defect

    df: pd.DataFrame default train

    Returns
    ---------
    x : np.ndarray

    y : np.ndarray
    """
    # Select the image to mask
    # cond = df.ImageId_ClassId == f"{img_id}_{class_id}"
    cond = (df.ImageId == img_id) & (df.ClassId == class_id)
    train_s = df[cond]

    encoded_pixels = [int(i) for i in train_s.EncodedPixels.values[0].split(" ")]

    pixcels = []
    pos_pixels = encoded_pixels[0:len(encoded_pixels):2]
    offs_pixels = encoded_pixels[1:len(encoded_pixels):2]

    for pos, offset in zip(pos_pixels, offs_pixels):
        pixcels.extend(list(range(pos, pos+offset)))

    pixcels = np.array(pixcels)
    x = pixcels // 256
    y = pixcels % 256

    return x, y